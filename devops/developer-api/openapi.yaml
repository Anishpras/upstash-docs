"openapi": "3.0.1"
"info":
  "title": "Upstash API"
  "description": "API for managing Upstash resources including Redis, Teams, and Vectors."
  "version": "3.0.1"
"servers":
  -
    "url": "https://api.upstash.com"
    "description": "Upstash API server"
"components":
  "securitySchemes":
    "basicAuth":
      "type": "http"
      "scheme": "basic"
      "description": "Basic authentication using email and API key"
  "schemas":
    "TimeSeriesData":
      "type": "object"
      "properties":
        "x":
          "type": "string"
          "description": "Timestamp indicating when the measurement was taken."
          "example": "2023-05-22 10:59:23.426 +0000 UTC"
        "y":
          "type": "number"
          "description": "Value of the measurement"
          "example": 320
"security":
  -
    "basicAuth": []
"paths":
  "/v2/redis/create-backup/{id}":
    "post":
      "summary": "Create Backup"
      "description": "This endpoint creates a backup for a Redis database."
      "security":
        - basicAuth: []
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the Redis database"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "required":
                - name
              "properties":
                "name":
                  "type": "string"
                  "description": "Name of the backup"
                  "example": "backup_name"
      "responses":
        "200":
          "description": "Backup created successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/redis/delete-backup/{id}/{backup_id}":
    "delete":
      "summary": "Delete Backup"
      "description": "This endpoint deletes a backup of a Redis database."
      "security":
        - basicAuth: []
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the Redis database"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "backup_id"
          "in": "path"
          "description": "The ID of the backup to delete"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "200":
          "description": "Backup deleted successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/redis/disable-dailybackup/{id}":
    "patch":
      "summary": "Disable Daily Backup"
      "description": "This endpoint disables daily backup for a Redis database."
      "security":
        - basicAuth: []
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the Redis database"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "200":
          "description": "Daily backup disabled successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/redis/enable-dailybackup/{id}":
    "patch":
      "summary": "Enable Daily Backup"
      "description": "This endpoint enables daily backup for a Redis database."
      "security":
        - basicAuth: []
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the Redis database"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "200":
          "description": "Daily backup enabled successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/redis/list-backup/{id}":
    "get":
      "summary": "List Backup"
      "description": "This endpoint lists all backups for a Redis database."
      "security":
        - basicAuth: []
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the Redis database"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "200":
          "description": "Backups retrieved successfully"
          "content":
            "application/json":
              "schema":
                "type": "array"
                "items":
                  "type": "object"
                  "properties":
                    "database_id":
                      "type": "string"
                      "description": "ID of the database"
                      "example": "6gceaafd-9627-4fa5-8g71-b3359g19a5g4"
                    "customer_id":
                      "type": "string"
                      "description": "Customer ID"
                      "example": "customer_id"
                    "name":
                      "type": "string"
                      "description": "Name of the backup"
                      "example": "test2"
                    "backup_id":
                      "type": "string"
                      "description": "ID of the backup"
                      "example": "1768e55b-c137-4339-b46e-449dcd33a62e"
                    "creation_time":
                      "type": "integer"
                      "description": "Creation time of the backup as Unix time"
                      "example": 1720186545
                    "state":
                      "type": "string"
                      "description": "State of the backup (e.g., completed)"
                      "example": "completed"
                    "backup_size":
                      "type": "integer"
                      "description": "Size of the backup"
                      "example": 0
                    "daily_backup":
                      "type": "boolean"
                      "description": "Daily backup status"
                      "example": false
                    "hourly_backup":
                      "type": "boolean"
                      "description": "Hourly backup status"
                      "example": false
  "/v2/redis/restore-backup/{id}":
    "post":
      "summary": "Restore Backup"
      "description": "This endpoint restores data from an existing backup."
      "security":
        - basicAuth: []
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the Redis database"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "required":
                - backup_id
              "properties":
                "backup_id":
                  "type": "string"
                  "description": "ID of the backup to restore"
                  "example": "backup_id"
      "responses":
        "200":
          "description": "Backup restored successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/redis/database":
    "post":
      "summary": "Create a Redis Database (Global)"
      "description": "This endpoint creates a new Redis database."
      "requestBody":
        "content":
          "application/json":
            "schema":
              "type": "object"
              "required": ["name", "region", "primary_region"]
              "properties":
                "name":
                  "type": "string"
                  "description": "Name of the database"
                "region":
                  "type": "string"
                  "description": "Region of the database. Only valid option is 'global'"
                  "default": "global"
                  "enum": ["global"]
                "primary_region":
                  "type": "string"
                  "description": "Primary Region of the Global Database"
                  "enum":
                    - "us-east-1"
                    - "us-west-1"
                    - "us-west-2"
                    - "eu-west-1"
                    - "eu-central-1"
                    - "ap-southeast-1"
                    - "ap-southeast-2"
                    - "sa-east-1"
                "read_regions":
                  "type": "array"
                  "items":
                    "type": "string"
                    "enum":
                      - "us-east-1"
                      - "us-west-1"
                      - "us-west-2"
                      - "eu-west-1"
                      - "eu-central-1"
                      - "ap-southeast-1"
                      - "ap-southeast-2"
                      - "ap-northeast-1"
                      - "sa-east-1"
                  "description": "Array of Read Regions of the Database"
                "tls":
                  "type": "boolean"
                  "description": "TLS is always enabled for new databases"
                  "default": true
      "responses":
        "200":
          "description": "Database created successfully"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "database_id":
                    "type": "string"
                    "description": "ID of the created database"
                    "example": "93e3a3e-342c-4683-ba75-344c08ae143b"
                  "database_name":
                    "type": "string"
                    "description": "Name of the database"
                    "example": "global-test"
                  "database_type":
                    "type": "string"
                    "description": "Type of the database in terms of pricing model(Free, Pay as You Go or Enterprise)"
                    "example": "Pay as You Go"
                  "region":
                    "type": "string"
                    "description": "The region where database is hosted"
                    "example": "global"
                  "port":
                    "type": "integer"
                    "description": "Database port for clients to connect"
                    "example": 32559
                  "creation_time":
                    "type": "integer"
                    "description": "Creation time of the database as Unix time"
                    "example": 1674596896
                  "state":
                    "type": "string"
                    "description": "State of database (active or deleted)"
                    "example": "active"
                  "password":
                    "type": "string"
                    "description": "Password of the database"
                    "example": "dd1803832a2746309e118373549e574d"
                  "user_email":
                    "type": "string"
                    "description": "Email or team id of the owner of the database"
                    "example": "support@upstash.com"
                  "endpoint":
                    "type": "string"
                    "description": "Endpoint URL of the database"
                    "example": "steady-stud-32559.upstash.io"
                  "tls":
                    "type": "boolean"
                    "description": "TLS is always enabled for new databases"
                    "example": false
                  "rest_token":
                    "type": "string"
                    "description": "REST API token for the database"
                    "example": "AX8vACQgOTMyY2UyYy00NjgzLWJhNzUtMzQ0YzA4YWUxNDNiZMyYTI3NDYzMDllMTE4MzczNTQ5ZTU3NGQ="
                  "read_only_rest_token":
                    "type": "string"
                    "description": "Read-only REST API token for the database"
                    "example": "An8vACQg2UtMzQyYy00NjgzLWJhNzUtMzQ0YzA4YBVsUsyn19xDnTAvjbsiq79GRDrURNLzIYIOk="
  "/v2/redis/database/{id}":
    "delete":
      "summary": "Delete Database"
      "description": "This endpoint deletes a database."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the database to be deleted"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "200":
          "description": "Database deleted successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
    "get":
      "summary": "Get Database"
      "description": "This endpoint gets details of a database."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the database to reset password"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "credentials"
          "in": "query"
          "description": "Set to 'hide' to remove credentials from the response"
          "schema":
            "type": "string"
      "responses":
        "200":
          "description": "Database details"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "database_id":
                    "type": "string"
                    "description": "ID of the created database"
                    "example": "96ad0856-03b1-4ee7-9666-e81abd0349e1"
                  "database_name":
                    "type": "string"
                    "description": "Name of the database"
                    "example": "MyRedis"
                  "database_type":
                    "type": "string"
                    "description": "Type of the database in terms of pricing model(Free, Pay as You Go or Enterprise)"
                    "example": "Pay as You Go"
                  "region":
                    "type": "string"
                    "description": "The region where database is hosted"
                    "example": "eu-central-1"
                  "port":
                    "type": "integer"
                    "description": "Database port for clients to connect"
                    "example": 30143
                  "creation_time":
                    "type": "integer"
                    "description": "Creation time of the database as Unix time"
                    "example": 1658909671
                  "state":
                    "type": "string"
                    "description": "State of database (active or deleted)"
                    "example": "active"
                  "password":
                    "type": "string"
                    "description": "Password of the database"
                    "example": "038a8e27c45e43068d5f186085399884"
                  "user_email":
                    "type": "string"
                    "description": "Email or team id of the owner of the database"
                    "example": "example@upstash.com"
                  "endpoint":
                    "type": "string"
                    "description": "Endpoint URL of the database"
                    "example": "eu2-sought-mollusk-30143.upstash.io"
                  "tls":
                    "type": "boolean"
                    "description": "TLS/SSL is enabled or not"
                    "example": true
                  "rest_token":
                    "type": "string"
                    "description": "Token for rest based communication with the database"
                    "example": "AXW_ASQgOTZhZDA4NTYtMDNiMS00ZWU3LTk2NjYtZTgxYWJkMDM0OWUxMDM4YThlMjdjNDVlNDMwNjhkNWYxODYwODUzOTk4ODQ="
                  "read_only_rest_token":
                    "type": "string"
                    "description": "Read only token for rest based communication with the database"
                    "example": "AnW_ASQgOTZhZDA4NTYtMDNiMS00ZWU3LTk2NjYtZTgxYWJkMDM0OWUx8sbmiEcMm9u7Ks5Qx-kHNiWr_f-iUXSIH8MlziKMnpY="
                  "db_max_clients":
                    "type": "integer"
                    "description": "Max number of concurrent clients can be opened on this database currently"
                    "example": 1000
                  "db_max_request_size":
                    "type": "integer"
                    "description": "Max size of a request that will be accepted by the database currently(in bytes)"
                    "example": 1048576
                  "db_disk_threshold":
                    "type": "integer"
                    "description": "Total disk size limit that can be used for the database currently(in bytes)"
                    "example": 107374182400
                  "db_max_entry_size":
                    "type": "integer"
                    "description": "Max size of an entry that will be accepted by the database currently(in bytes)"
                    "example": 104857600
                  "db_memory_threshold":
                    "type": "integer"
                    "description": "Max size of a memory the database can use(in bytes)"
                    "example": 1073741824
                  "db_daily_bandwidth_limit":
                    "type": "integer"
                    "description": "Max daily bandwidth can be used by the database(in bytes)"
                    "example": 53687091200
                  "db_max_commands_per_second":
                    "type": "integer"
                    "description": "Max number of commands can be sent to the database per second"
                    "example": 1000
                  "db_request_limit":
                    "type": "integer"
                    "description": "Total number of commands can be sent to the database"
                    "example": 9223372036854775808
  "/v2/redis/disable-autoupgrade/{id}":
    "post":
      "summary": "Disable Auto Upgrade"
      "description": "This endpoint disables Auto Upgrade for given database."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the database to disable auto upgrade"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "200":
          "description": "Auto upgrade disabled successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/redis/disable-eviction/{id}":
    "post":
      "summary": "Disable Eviction"
      "description": "This endpoint disables eviction for a given database."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the database to disable eviction"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "200":
          "description": "Eviction disabled successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/redis/enable-autoupgrade/{id}":
    "post":
      "summary": "Enable Auto Upgrade"
      "description": "This endpoint enables Auto Upgrade for given database."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the database to enable auto upgrade"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "200":
          "description": "Auto upgrade enabled successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/redis/enable-eviction/{id}":
    "post":
      "summary": "Enable Eviction"
      "description": "This endpoint enables eviction for given database."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the database to enable eviction"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "200":
          "description": "Eviction enabled successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/redis/enable-tls/{id}":
    "post":
      "summary": "Enable TLS"
      "description": "This endpoint enables TLS on a database."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the database to enable TLS"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "200":
          "description": "Database details after enabling TLS"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "database_id":
                    "type": "string"
                    "description": "ID of the created database"
                    "example": "96ad0856-03b1-4ee7-9666-e81abd0349e1"
                  "cluster_id":
                    "type": "string"
                    "description": "ID of the cluster"
                    "example": "dea1f974"
                  "database_name":
                    "type": "string"
                    "description": "Name of the database"
                    "example": "MyRedis"
                  "database_type":
                    "type": "string"
                    "description": "Type of the database in terms of pricing model(Free, Pay as You Go or Enterprise)"
                    "example": "Pay as You Go"
                  "region":
                    "type": "string"
                    "description": "The region where database is hosted"
                    "example": "eu-central-1"
                  "port":
                    "type": "integer"
                    "description": "Database port for clients to connect"
                    "example": 30143
                  "creation_time":
                    "type": "integer"
                    "description": "Creation time of the database as Unix time"
                    "example": 1658909671
                  "state":
                    "type": "string"
                    "description": "State of database (active or deleted)"
                    "example": "active"
                  "password":
                    "type": "string"
                    "description": "Password of the database"
                    "example": "49665a1710f3434d8be008aab50f38d2"
                  "user_email":
                    "type": "string"
                    "description": "Email or team id of the owner of the database"
                    "example": "example@upstash.com"
                  "endpoint":
                    "type": "string"
                    "description": "Endpoint URL of the database"
                    "example": "eu2-sought-mollusk-30143.upstash.io"
                  "tls":
                    "type": "boolean"
                    "description": "TLS/SSL is enabled or not"
                    "example": true
  "/v2/redis/stats/{id}":
    "get":
      "summary": "Get Database Stats"
      "description": "This endpoint gets detailed stats of a database."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the database"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "200":
          "description": "Database stats retrieved successfully"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "connection_count":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "Total number of connections momentarily"
                    "example": [{"x": "2023-05-22 10:59:23.426 +0000 UTC", "y": 320}]
                  "keyspace":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "Total number keys exists in the database"
                    "example": [{"x": "2023-05-22 10:59:23.426 +0000 UTC", "y": 344725564}]
                  "throughput":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "Throughput seen on the database connections"
                    "example": [{"x": "2023-05-22 11:00:23.426 +0000 UTC", "y": 181.88333333333333}]
                  "produce_throughput":
                    "type": "array"
                    "nullable": true
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "Throughput seen on the database connections for write requests"
                    "example": null
                  "consume_throughput":
                    "type": "array"
                    "nullable": true
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "Throughput seen on the database connections for read requests"
                    "example": null
                  "diskusage":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "Total amount of this usage of the database"
                    "example": [{"x": "2023-05-22 10:59:23.426 +0000 UTC", "y": 532362818323}]
                  "latencymax":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "Maximum server latency observed in the last hour"
                    "example": [{"x": "2023-05-22 10:59:23.426 +0000 UTC", "y": 0.5}]
                  "latencymin":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "Minimum server latency observed in the last hour"
                    "example": [{"x": "2023-05-22 10:59:23.426 +0000 UTC", "y": 0.1}]
                  "read_latency_mean":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "The average read latency value measured in the last hour"
                    "example": [{"x": "2023-05-22 11:00:23.426 +0000 UTC", "y": 0}]
                  "read_latency_99":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "The 99th percentile server read latency observed in the last hour"
                    "example": [{"x": "2023-05-22 11:00:23.426 +0000 UTC", "y": 0}]
                  "write_latency_mean":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "The average write latency value measured in the last hour"
                    "example": [{"x": "2023-05-22 11:00:23.426 +0000 UTC", "y": 0}]
                  "write_latency_99":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "The 99th percentile server write latency observed in the last hour"
                    "example": [{"x": "2023-05-22 11:00:23.426 +0000 UTC", "y": 0}]
                  "hits":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "Total number requests made to the database that are hit"
                    "example": [{"x": "2023-05-22 11:00:23.426 +0000 UTC", "y": 0}]
                  "misses":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "Total number requests made to the database that are miss"
                    "example": [{"x": "2023-05-22 11:00:23.426 +0000 UTC", "y": 0}]
                  "read":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "Total number read requests made to the database"
                    "example": [{"x": "2023-05-22 11:00:23.426 +0000 UTC", "y": 82.53333333333333}]
                  "write":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "Total number write requests made to the database"
                    "example": [{"x": "2023-05-22 11:00:23.426 +0000 UTC", "y": 99.35}]
                  "dailyrequests":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "Total number requests made to the database on the corresponding day"
                    "example": [{"x": "2023-05-18 11:58:23.534505371 +0000 UTC", "y": 68844080}]
                  "dailybandwidth":
                    "type": "integer"
                    "description": "The total daily bandwidth usage (in bytes)."
                    "example": 50444740913
                  "bandwidths":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "The total bandwidth size for specific timestamps"
                    "example": [{"x": "2023-05-18 11:58:23.534505371 +0000 UTC", "y": 125391861729}]
                  "days":
                    "type": "array"
                    "items":
                      "type": "string"
                    "description": "A list of the days of the week for the measurement"
                    "example": ["Thursday", "Friday", "Saturday", "Sunday", "Monday"]
                  "dailybilling":
                    "type": "array"
                    "items":
                      "$ref": "#/components/schemas/TimeSeriesData"
                    "description": "The billing amount for specific dates"
                    "example": [{"x": "2023-05-18 11:58:23.534505371 +0000 UTC", "y": 145.72694911244588}]
                  "dailyproduce":
                    "type": "integer"
                    "nullable": true
                    "description": "Total number of daily produced commands"
                    "example": null
                  "dailyconsume":
                    "type": "integer"
                    "nullable": true
                    "description": "Total number of daily consumed commands"
                    "example": null
                  "total_monthly_requests":
                    "type": "integer"
                    "description": "The total number of requests made in the current month."
                    "example": 1283856937
                  "total_monthly_read_requests":
                    "type": "integer"
                    "description": "The total number of read requests made in the current month."
                    "example": 1034567002
                  "total_monthly_write_requests":
                    "type": "integer"
                    "description": "The total number of write requests made in the current month."
                    "example": 249289935
                  "total_monthly_storage":
                    "type": "integer"
                    "description": "The total amount of storage used (in bytes) in the current month."
                    "example": 445942383672
                  "total_monthly_billing":
                    "type": "number"
                    "description": "Total cost of the database in the current month"
                    "example": 222.33902763855485
                  "total_monthly_produce":
                    "type": "integer"
                    "description": "Total number of produce commands in the current month"
                    "example": 0
                  "total_monthly_consume":
                    "type": "integer"
                    "description": "Total number of consume commands in the current month"
                    "example": 0
  "/v2/redis/databases":
    "get":
      "summary": "List Databases"
      "description": "This endpoint lists all databases of a user."
      "responses":
        "200":
          "description": "List of databases"
          "content":
            "application/json":
              "schema":
                "type": "array"
                "items":
                  "type": "object"
                  "properties":
                    "database_id":
                      "type": "string"
                      "description": "ID of the database"
                      "example": "96ad0856-03b1-4ee7-9666-e81abd0349e1"
                    "database_name":
                      "type": "string"
                      "description": "Name of the database"
                      "example": "MyRedis"
                    "database_type":
                      "type": "string"
                      "description": "Type of the database in terms of pricing model(Free, Pay as You Go or Enterprise)"
                      "example": "Pay as You Go"
                    "region":
                      "type": "string"
                      "description": "The region where database is hosted"
                      "example": "eu-central-1"
                    "port":
                      "type": "integer"
                      "description": "Database port for clients to connect"
                      "example": 30143
                    "creation_time":
                      "type": "integer"
                      "description": "Creation time of the database as Unix time"
                      "example": 1658909671
                    "state":
                      "type": "string"
                      "description": "State of database (active or deleted)"
                      "example": "active"
                    "password":
                      "type": "string"
                      "description": "Password of the database"
                      "example": "038a8e27c45e43068d5f186085399884"
                    "user_email":
                      "type": "string"
                      "description": "Email or team id of the owner of the database"
                      "example": "example@upstash.com"
                    "endpoint":
                      "type": "string"
                      "description": "Endpoint URL of the database"
                      "example": "eu2-sought-mollusk-30143.upstash.io"
                    "tls":
                      "type": "boolean"
                      "description": "TLS/SSL is enabled or not"
                      "example": true
                    "rest_token":
                      "type": "string"
                      "description": "Token for rest based communication with the database"
                      "example": "AXW_ASQgOTZhZDA4NTYtMDNiMS00ZWU3LTk2NjYtZTgxYWJkMDM0OWUxMDM4YThlMjdjNDVlNDMwNjhkNWYxODYwODUzOTk4ODQ="
                    "read_only_rest_token":
                      "type": "string"
                      "description": "Read only token for rest based communication with the database"
                      "example": "AnW_ASQgOTZhZDA4NTYtMDNiMS00ZWU3LTk2NjYtZTgxYWJkMDM0OWUx8sbmiEcMm9u7Ks5Qx-kHNiWr_f-iUXSIH8MlziKMnpY="
  "/v2/redis/move-to-team":
    "post":
      "summary": "Move To Team"
      "description": "This endpoint moves database under a target team."
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "required": ["team_id", "database_id"]
              "properties":
                "team_id":
                  "type": "string"
                  "description": "The ID of the target team"
                  "example": "6cc32556-0718-4de5-b69c-b927693f9282"
                "database_id":
                  "type": "string"
                  "description": "The ID of the database to be moved"
                  "example": "67b6af16-acb2-4f00-9e38-f6cb9bee800d"
      "responses":
        "200":
          "description": "Database moved successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/redis/rename/{id}":
    "post":
      "summary": "Rename Database"
      "description": "This endpoint renames a database."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the database to be renamed"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "required": ["name"]
              "properties":
                "name":
                  "type": "string"
                  "description": "The new name of the database"
      "responses":
        "200":
          "description": "Database renamed successfully"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "database_id":
                    "type": "string"
                    "description": "ID of the created database"
                    "example": "96ad0856-03b1-4ee7-9666-e81abd0349e1"
                  "cluster_id":
                    "type": "string"
                    "description": "ID of the cluster"
                    "example": "dea1f974"
                  "database_name":
                    "type": "string"
                    "description": "New name of the database"
                    "example": "MyRedis"
                  "database_type":
                    "type": "string"
                    "description": "Type of the database in terms of pricing model(Free, Pay as You Go or Enterprise)"
                    "example": "Pay as You Go"
                  "region":
                    "type": "string"
                    "description": "The region where database is hosted"
                    "example": "eu-central-1"
                  "port":
                    "type": "integer"
                    "description": "Database port for clients to connect"
                    "example": 30143
                  "creation_time":
                    "type": "integer"
                    "description": "Creation time of the database as Unix time"
                    "example": 1658909671
                  "state":
                    "type": "string"
                    "description": "State of database (active or deleted)"
                    "example": "active"
                  "password":
                    "type": "string"
                    "description": "Password of the database"
                    "example": "49665a1710f3434d8be008aab50f38d2"
                  "user_email":
                    "type": "string"
                    "description": "Email or team id of the owner of the database"
                    "example": "example@upstash.com"
                  "endpoint":
                    "type": "string"
                    "description": "Endpoint URL of the database"
                    "example": "eu2-sought-mollusk-30143.upstash.io"
                  "tls":
                    "type": "boolean"
                    "description": "TLS/SSL is enabled or not"
                    "example": true
  "/v2/redis/reset-password/{id}":
    "post":
      "summary": "Reset Password"
      "description": "This endpoint updates the password of a database."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of the database to reset password"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "200":
          "description": "Password reset successful"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "database_id":
                    "type": "string"
                    "description": "ID of the created database"
                    "example": "96ad0856-03b1-4ee7-9666-e81abd0349e1"
                  "cluster_id":
                    "type": "string"
                    "description": "ID of the cluster"
                    "example": "dea1f974"
                  "database_name":
                    "type": "string"
                    "description": "Name of the database"
                    "example": "MyRedis"
                  "database_type":
                    "type": "string"
                    "description": "Type of the database in terms of pricing model(Free, Pay as You Go or Enterprise)"
                    "example": "Pay as You Go"
                  "region":
                    "type": "string"
                    "description": "The region where database is hosted"
                    "example": "eu-central-1"
                  "port":
                    "type": "integer"
                    "description": "Database port for clients to connect"
                    "example": 30143
                  "creation_time":
                    "type": "integer"
                    "description": "Creation time of the database as Unix time"
                    "example": 1658909671
                  "state":
                    "type": "string"
                    "description": "State of database (active or deleted)"
                    "example": "active"
                  "password":
                    "type": "string"
                    "description": "Password of the database"
                    "example": "49665a1710f3434d8be008aab50f38d2"
                  "user_email":
                    "type": "string"
                    "description": "Email or team id of the owner of the database"
                    "example": "example@upstash.com"
                  "endpoint":
                    "type": "string"
                    "description": "Endpoint URL of the database"
                    "example": "eu2-sought-mollusk-30143.upstash.io"
                  "tls":
                    "type": "boolean"
                    "description": "TLS/SSL is enabled or not"
                    "example": true
                  "consistent":
                    "type": "boolean"
                    "description": "Whether the database is consistent"
                    "example": false
                  "pool_id":
                    "type": "string"
                    "description": "ID of the pool"
                    "example": "f886c7f3"
                  "rest_token":
                    "type": "string"
                    "description": "Token for rest based communication with the database"
                    "example": "AXW_ASQgOTZhZDA4NTYtMDNiMS00ZWU3LTk2NjYtZTgxYWJkMDM0OWUxNDk2NjVhMTcxMGYzNDM0ZDhiZTAwOGFhYjUwZjM4ZDI="
                  "read_only_rest_token":
                    "type": "string"
                    "description": "Read only token for rest based communication with the database"
                    "example": "AnW_ASQgOTZhZDA4NTYtMDNiMS00ZWU3LTk2NjYtZTgxYWJkMDM0OWUxB5sRhCROkPsxozFcDzDgVGRAxUI7UUr0Y6uFB7jMIOI="
  "/v2/redis/update-regions/{id}":
    "post":
      "summary": "Update Regions (Global)"
      "description": "Update the regions of global database"
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The ID of your database"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "required": ["read_regions"]
              "properties":
                "read_regions":
                  "type": "array"
                  "description": "Array of read regions of the database"
                  "items":
                    "type": "string"
                    "enum":
                      - "us-east-1"
                      - "us-west-1"
                      - "us-west-2"
                      - "eu-west-1"
                      - "eu-central-1"
                      - "ap-southeast-1"
                      - "ap-southeast-2"
                      - "sa-east-1"
                  "example": ["us-west-1"]
      "responses":
        "200":
          "description": "Regions updated successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/team":
    "post":
      "summary": "Create Team"
      "description": "This endpoint creates a new team."
      "security":
        - basicAuth: []
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "required":
                - team_name
                - copy_cc
              "properties":
                "team_name":
                  "type": "string"
                  "description": "Name of the new team"
                  "example": "myteam"
                "copy_cc":
                  "type": "boolean"
                  "description": "Whether to copy existing credit card information to team or not"
                  "example": true
      "responses":
        "200":
          "description": "Team created successfully"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "team_id":
                    "type": "string"
                    "description": "ID of the created team"
                    "example": "75b471f2-15a1-47b0-8ce5-12a57682bfc9"
                  "team_name":
                    "type": "string"
                    "description": "Name of the created team"
                    "example": "test_team_name_2"
                  "copy_cc":
                    "type": "boolean"
                    "description": "Whether creditcard information added to team during creation or not"
                    "example": true
  "/v2/teams/member":
    "post":
      "summary": "Add Team Member"
      "description": "This endpoint adds a new team member to the specified team."
      "security":
        - basicAuth: []
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "required":
                - team_id
                - member_email
                - member_role
              "properties":
                "team_id":
                  "type": "string"
                  "description": "Id of the team to add the member to"
                  "example": "95849b27-40d0-4532-8695-d2028847f823"
                "member_email":
                  "type": "string"
                  "description": "Email of the new team member"
                  "example": "example@upstash.com"
                "member_role":
                  "type": "string"
                  "description": "Role of the new team member"
                  "enum": ["admin", "dev", "finance"]
                  "example": "dev"
      "responses":
        "200":
          "description": "Member added successfully"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "team_id":
                    "type": "string"
                    "description": "ID of the team"
                    "example": "95849b27-40d0-4532-8695-d2028847f823"
                  "team_name":
                    "type": "string"
                    "description": "Name of the team"
                    "example": "test_team_name"
                  "member_email":
                    "type": "string"
                    "description": "Email of the new team member"
                    "example": "example@upstash.com"
                  "member_role":
                    "type": "string"
                    "description": "Role of the new team member"
                    "example": "dev"
    "delete":
      "summary": "Delete Team Member"
      "description": "This endpoint deletes a team member from the specified team."
      "security":
        - basicAuth: []
      "requestBody":
        "content":
          "application/json":
            "schema":
              "type": "object"
              "properties":
                "team_id":
                  "type": "string"
                  "description": "Id of the team to remove the member from"
                "member_email":
                  "type": "string"
                  "description": "Email of the team member to remove"
      "responses":
        "200":
          "description": "Member deleted successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/team/{id}":
    "delete":
      "summary": "Delete Team"
      "description": "This endpoint deletes a team."
      "security":
        - basicAuth: []
      "parameters":
        - name: "id"
          in: path
          description: "The ID of the team to delete"
          required: true
          schema:
            type: string
      "responses":
        "200":
          "description": "Team deleted successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/teams/{team_id}":
    "get":
      "summary": "Get Team Members"
      "description": "This endpoint list all members of a team."
      "security":
        - basicAuth: []
      "parameters":
        - name: "team_id"
          in: path
          description: "ID of the team"
          required: true
          schema:
            type: string
      "responses":
        "200":
          "description": "Team members retrieved successfully"
          "content":
            "application/json":
              "schema":
                "type": "array"
                "items":
                  "type": "object"
                  "properties":
                    "team_id":
                      "type": "string"
                      "description": "ID of the team"
                      "example": "3423cb72-e50d-43ec-a9c0-f0f359941223"
                    "team_name":
                      "type": "string"
                      "description": "Name of the team"
                      "example": "test_team_name_2"
                    "member_email":
                      "type": "string"
                      "description": "Email of the team member"
                      "example": "example@upstash.com"
                    "member_role":
                      "type": "string"
                      "description": "Role of the team member"
                      "example": "dev"
  "/v2/teams":
    "get":
      "summary": "List Teams"
      "description": "This endpoint lists all teams of user."
      "security":
        - basicAuth: []
      "responses":
        "200":
          "description": "Teams retrieved successfully"
          "content":
            "application/json":
              "schema":
                "type": "array"
                "items":
                  "type": "object"
                  "properties":
                    "team_id":
                      "type": "string"
                      "description": "ID of the created team"
                      "example": "95849b27-40d0-4532-8695-d2028847f823"
                    "team_name":
                      "type": "string"
                      "description": "Name of the created team"
                      "example": "test_team_name"
                    "member_role":
                      "type": "string"
                      "description": "Role of the user in this team"
                      "example": "owner"
                    "copy_cc":
                      "type": "boolean"
                      "description": "Whether creditcard information added to team during creation or not"
                      "example": true
  "/v2/vector/index":
    "post":
      "summary": "Create Index"
      "description": "This endpoint creates an index."
      "security":
        - basicAuth: []
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "required":
                - name
                - region
                - similarity_function
                - dimension_count
              "properties":
                "name":
                  "type": "string"
                  "description": "Name of the index."
                "region":
                  "type": "string"
                  "description": "Region of the database."
                  "enum": ["eu-west-1", "us-east-1"]
                "similarity_function":
                  "type": "string"
                  "description": "Similarity function that's used to calculate the distance between two vectors."
                  "enum": ["COSINE", "EUCLIDIAN", "DOT_PRODUCT"]
                "dimension_count":
                  "type": "integer"
                  "description": "The amount of values in a single vector."
                "type":
                  "type": "string"
                  "description": "The payment plan of your index."
                  "enum": ["payg", "fixed"]
                "embedding_model":
                  "type": "string"
                  "description": "The predefined embedding model to vectorize your plain text."
                  "enum": ["BGE_SMALL_EN_V1_5", "BGE_BASE_EN_V1_5", "BGE_LARGE_EN_V1_5", "BGE_M3", "BERT_BASE_UNCASED", "UAE_Large_V1", "ALL_MINILM_L6_V2", "MXBAI_EMBED_LARGE_V1"]
      "responses":
        "200":
          "description": "Index created successfully"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "customer_id":
                    "type": "string"
                    "description": "The associated ID of the owner of the index"
                  "id":
                    "type": "string"
                    "description": "Unique ID of the index"
                  "name":
                    "type": "string"
                    "description": "The name of the index"
                  "similarity_function":
                    "type": "string"
                    "description": "Similarity function that's used to calculate the distance between two vectors"
                  "dimension_count":
                    "type": "integer"
                    "description": "The amount of values in a single vector"
                  "endpoint":
                    "type": "string"
                    "description": "The REST endpoint of the index"
                  "token":
                    "type": "string"
                    "description": "The REST authentication token for the index"
                  "read_only_token":
                    "type": "string"
                    "description": "The REST authentication read only token for the index"
                  "type":
                    "type": "string"
                    "description": "The payment plan of the index"
                  "region":
                    "type": "string"
                    "description": "The region where the index is currently deployed"
                  "max_vector_count":
                    "type": "integer"
                    "description": "The number of maximum that your index can contain"
                  "max_daily_updates":
                    "type": "integer"
                    "description": "The number of maximum update operations you can perform in a day. Only upsert operations are included in update count"
                  "max_daily_queries":
                    "type": "integer"
                    "description": "The number of maximum query operations you can perform in a day. Only query operations are included in query count"
                  "max_monthly_bandwidth":
                    "type": "integer"
                    "description": "The maximum amount of monthly bandwidth for the index. Unit is bytes. -1 if the limit is unlimited"
                  "max_writes_per_second":
                    "type": "integer"
                    "description": "The number of maximum write operations you can perform per second. Only upsert operations are included in write count"
                  "max_query_per_second":
                    "type": "integer"
                    "description": "The number of maximum query operations you can perform per second. Only query operations are included in query count"
                  "max_reads_per_request":
                    "type": "integer"
                    "description": "The number of maximum vectors in a read operation. Query and fetch operations are included in read operations"
                  "max_writes_per_request":
                    "type": "integer"
                    "description": "The number of maximum vectors in a write operation. Only upsert operations are included in write operations"
                  "max_total_metadata_size":
                    "type": "integer"
                    "description": "The amount of maximum size for the total metadata sizes in your index"
                  "reserved_price":
                    "type": "number"
                    "description": "Monthly pricing of your index. Only available for fixed and pro plans"
                  "creation_time":
                    "type": "integer"
                    "description": "The creation time of the vector index in UTC as unix timestamp"
                  "embedding_model":
                    "type": "string"
                    "description": "The predefined embedding model to vectorize your plain text"
                "required": [
                  "customer_id",
                  "id",
                  "name",
                  "similarity_function",
                  "dimension_count",
                  "endpoint",
                  "token",
                  "read_only_token",
                  "type",
                  "region",
                  "max_vector_count",
                  "max_daily_updates",
                  "max_daily_queries",
                  "max_monthly_bandwidth",
                  "max_writes_per_second",
                  "max_query_per_second",
                  "max_reads_per_request",
                  "max_writes_per_request",
                  "max_total_metadata_size",
                  "creation_time",
                  "embedding_model"
                ]
    "get":
      "summary": "List Indices"
      "description": "This endpoint returns the data related to all indices of an account as a list."
      "security":
        - basicAuth: []
      "responses":
        "200":
          "description": "List of indices retrieved successfully"
          "content":
            "application/json":
              "schema":
                "type": "array"
                "items":
                  "type": "object"
                  "required": [
                    "customer_id",
                    "id",
                    "name",
                    "similarity_function",
                    "dimension_count",
                    "endpoint",
                    "type",
                    "region",
                    "max_vector_count",
                    "max_daily_updates",
                    "max_daily_queries",
                    "max_monthly_bandwidth",
                    "max_writes_per_second",
                    "max_query_per_second",
                    "max_reads_per_request",
                    "max_writes_per_request",
                    "max_total_metadata_size",
                    "creation_time"
                  ]
                  "properties":
                    "customer_id":
                      "type": "string"
                      "description": "The associated ID of the owner of the index"
                      "example": "test@upstash.com"
                    "id":
                      "type": "string"
                      "description": "Unique ID of the index"
                      "example": "0639864f-ece6-429c-8118-86a287b0e808"
                    "name":
                      "type": "string"
                      "description": "The name of the index"
                      "example": "myindex"
                    "similarity_function":
                      "type": "string"
                      "description": "Similarity function that's used to calculate the distance between two vectors"
                      "example": "COSINE"
                    "dimension_count":
                      "type": "integer"
                      "description": "The amount of values in a single vector"
                      "example": 5
                    "endpoint":
                      "type": "string"
                      "description": "The REST endpoint of the index"
                      "example": "test-index-3814-eu1-vector.upstash.io"
                    "type":
                      "type": "string"
                      "description": "The payment plan of the index"
                      "example": "paid"
                    "region":
                      "type": "string"
                      "description": "The region where the index is currently deployed"
                      "example": "eu-west-1"
                    "max_vector_count":
                      "type": "integer"
                      "description": "The number of maximum that your index can contain"
                      "example": 400000000
                    "max_daily_updates":
                      "type": "integer"
                      "description": "The number of maximum update operations you can perform in a day. Only upsert operations are included in update count"
                      "example": -1
                    "max_daily_queries":
                      "type": "integer"
                      "description": "The number of maximum query operations you can perform in a day. Only query operations are included in query count"
                      "example": -1
                    "max_monthly_bandwidth":
                      "type": "integer"
                      "description": "The maximum amount of monthly bandwidth for the index. Unit is bytes. -1 if the limit is unlimited"
                      "example": -1
                    "max_writes_per_second":
                      "type": "integer"
                      "description": "The number of maximum write operations you can perform per second. Only upsert operations are included in write count"
                      "example": 1000
                    "max_query_per_second":
                      "type": "integer"
                      "description": "The number of maximum query operations you can perform per second. Only query operations are included in query count"
                      "example": 1000
                    "max_reads_per_request":
                      "type": "integer"
                      "description": "The number of maximum vectors in a read operation. Query and fetch operations are included in read operations"
                      "example": 1000
                    "max_writes_per_request":
                      "type": "integer"
                      "description": "The number of maximum vectors in a write operation. Only upsert operations are included in write operations"
                      "example": 1000
                    "max_total_metadata_size":
                      "type": "integer"
                      "description": "The amount of maximum size for the total metadata sizes in your index"
                      "example": 53687091200
                    "reserved_price":
                      "type": "number"
                      "description": "Monthly pricing of your index. Only available for fixed and pro plans"
                      "example": null
                    "creation_time":
                      "type": "integer"
                      "description": "The creation time of the vector index in UTC as unix timestamp"
                      "example": 1707313165
  "/v2/vector/index/{id}":
    "delete":
      tags:
        - Vector
      summary: Delete Index
      description: This endpoint deletes an index.
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The unique ID of the index to be deleted.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Index deleted successfully
          content:
            application/json:
              schema:
                type: string
                example: OK
    "get":
      "summary": "Get Index"
      "description": "This endpoint returns the data associated with an index."
      "security":
        - basicAuth: []
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The unique ID of the index to fetch."
          "required": true
          "schema":
            "type": "string"
      "responses":
        "200":
          "description": "Details of the index"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "required": [
                  "customer_id",
                  "id",
                  "name",
                  "similarity_function",
                  "dimension_count",
                  "endpoint",
                  "token",
                  "read_only_token",
                  "type",
                  "region",
                  "max_vector_count",
                  "max_daily_updates",
                  "max_daily_queries",
                  "max_monthly_bandwidth",
                  "max_writes_per_second",
                  "max_query_per_second",
                  "max_reads_per_request",
                  "max_writes_per_request",
                  "max_total_metadata_size",
                  "creation_time"
                ]
                "properties":
                  "customer_id":
                    "type": "string"
                    "description": "The associated ID of the owner of the index"
                    "example": "test@upstash.com"
                  "id":
                    "type": "string"
                    "description": "Unique ID of the index"
                    "example": "0639864f-ece6-429c-8118-86a287b0e808"
                  "name":
                    "type": "string"
                    "description": "The name of the index"
                    "example": "myindex"
                  "similarity_function":
                    "type": "string"
                    "description": "Similarity function that's used to calculate the distance between two vectors"
                    "example": "COSINE"
                  "dimension_count":
                    "type": "integer"
                    "description": "The amount of values in a single vector"
                    "example": 5
                  "endpoint":
                    "type": "string"
                    "description": "The REST endpoint of the index"
                    "example": "test-index-3814-eu1-vector.upstash.io"
                  "token":
                    "type": "string"
                    "description": "The REST authentication token for the index"
                    "example": "QkZGMk5heGltdW0tdXBkYXRlZC0zNzM1LWV1MkFkbWlOeGZGZ1J5Wm1GdE5tTXhNQzB1TmpsbExUb3hOekF0TVRJbFpqMTJORFUxTm1GZw=="
                  "read_only_token":
                    "type": "string"
                    "description": "The REST authentication read only token for the index"
                    "example": "QkZGRk1heGltdW0tdXBkYXRlZC0zNzM1LWV1MnJlYWRvbmx5TmtaZ05qS3JNWVV0Wm1aZ01pMDBOV1poTHRob05qY3RNR0U0TkRjejNqazJU"
                  "type":
                    "type": "string"
                    "description": "The payment plan of the index"
                    "example": "paid"
                  "region":
                    "type": "string"
                    "description": "The region where the index is currently deployed"
                    "example": "eu-west-1"
                  "max_vector_count":
                    "type": "integer"
                    "description": "The number of maximum that your index can contain"
                    "example": 400000000
                  "max_daily_updates":
                    "type": "integer"
                    "description": "The number of maximum update operations you can perform in a day. Only upsert operations are included in update count"
                    "example": -1
                  "max_daily_queries":
                    "type": "integer"
                    "description": "The number of maximum query operations you can perform in a day. Only query operations are included in query count"
                    "example": -1
                  "max_monthly_bandwidth":
                    "type": "integer"
                    "description": "The maximum amount of monthly bandwidth for the index. Unit is bytes. -1 if the limit is unlimited"
                    "example": -1
                  "max_writes_per_second":
                    "type": "integer"
                    "description": "The number of maximum write operations you can perform per second. Only upsert operations are included in write count"
                    "example": 1000
                  "max_query_per_second":
                    "type": "integer"
                    "description": "The number of maximum query operations you can perform per second. Only query operations are included in query count"
                    "example": 1000
                  "max_reads_per_request":
                    "type": "integer"
                    "description": "The number of maximum vectors in a read operation. Query and fetch operations are included in read operations"
                    "example": 1000
                  "max_writes_per_request":
                    "type": "integer"
                    "description": "The number of maximum vectors in a write operation. Only upsert operations are included in write operations"
                    "example": 1000
                  "max_total_metadata_size":
                    "type": "integer"
                    "description": "The amount of maximum size for the total metadata sizes in your index"
                    "example": 53687091200
                  "reserved_price":
                    "type": "number"
                    "description": "Monthly pricing of your index. Only available for fixed and pro plans"
                  "creation_time":
                    "type": "integer"
                    "description": "The creation time of the vector index in UTC as unix timestamp"
                    "example": 1707313165
  "/v2/vector/index/{id}/rename":
    "post":
      "summary": "Rename Index"
      "description": "This endpoint is used to change the name of an index."
      "security":
        - basicAuth: []
      "parameters":
        -
          "name": "id"
          "in": "path"
          "required": true
          "description": "The unique ID of the index to be renamed"
          "schema":
            "type": "string"
            "example": "14841111-b834-4788-925c-04ab156d1123"
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "required": ["name"]
              "properties":
                "name":
                  "type": "string"
                  "description": "The new name of the index"
                  "example": "myindex"
      "responses":
        "200":
          "description": "Index renamed successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/vector/index/{id}/reset-password":
    "post":
      "summary": "Reset Index Passwords"
      "description": "This endpoint is used to reset regular and readonly tokens of an index."
      "security":
        - basicAuth: []
      "parameters":
        -
          "name": "id"
          "in": "path"
          "required": true
          "description": "The unique ID of the index to reset the password for."
          "schema":
            "type": "string"
            "example": "14841111-b834-4788-925c-04ab156d1123"
      "responses":
        "200":
          "description": "Password reset successful"
          "content":
            "text/plain":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/vector/index/{id}/setplan":
    "post":
      "summary": "Set Index Plan"
      "description": "This endpoint is used to change the plan of an index."
      "security":
        - basicAuth: []
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "The unique ID of the index to be updated."
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "required":
                - target_plan
              "properties":
                "target_plan":
                  "type": "string"
                  "description": "The new plan for the index."
                  "example": "fixed"
      "responses":
        "200":
          "description": "Plan updated successfully"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"
  "/v2/vector/index/{id}/transfer":
    "post":
      "summary": "Transfer Index"
      "description": "This endpoint is used to transfer an index to another team."
      "security":
        - basicAuth: []
      "parameters":
        -
          "name": "id"
          "in": "path"
          "required": true
          "description": "The unique ID of the index to be transferred"
          "schema":
            "type": "string"
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "required":
                - "target_account"
              "properties":
                "target_account":
                  "type": "string"
                  "description": "The ID of the target account. If the target is a team, then use the format `team:<TEAM_ID>`, else if the target is your personal account use the format `<YOUR_EMAIL>`."
                  "example": "team:team-id-1"
      "responses":
        "200":
          "description": "Transfer successful"
          "content":
            "application/json":
              "schema":
                "type": "string"
                "example": "OK"